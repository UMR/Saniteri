<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cControl="clr-namespace:UMR.Saniteri.CustomControls;assembly=UMR.Saniteri.CustomControls"
    xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
    xmlns:Primitives="clr-namespace:Microsoft.Windows.Controls.Primitives;assembly=WPFToolkit"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    
    <!--DataGrid style-->
    <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Border x:Name="Border" SnapsToDevicePixels="True"					   
					   Background="#F2F3F5"/>
            <Polygon x:Name="Arrow"	
                     HorizontalAlignment="Right"
					 VerticalAlignment="Bottom"
                     Stretch="Uniform"
                     Margin="4"
					 Opacity=".2"
					 Fill="Black"
					 Points="0,10 10,10 10,0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background"
						Value="#BBEBFD" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background"
						Value="#BBEBFD" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" TargetName="Border" Value="#FFBBEBFD" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" TargetName="Border" Value="#FFBBEBFD" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed" />
      </Trigger>
    </ControlTemplate.Triggers>
    </ControlTemplate>
    <LinearGradientBrush x:Key="AlternateRowBackgroundBrush" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
        <GradientStop Color="#FFFFFF" Offset="0"/>
        <GradientStop Color="#F4F4F4" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DefaultControlBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="GridLineColorBrush" Color="#FFCEDFF6" />
    <DataTemplate x:Key="rowHeaderTemplate">
        <StackPanel Orientation="Horizontal">
            <Polygon Name="_indicator" Margin="2,0,2,0" Opacity=".8" HorizontalAlignment="Right" VerticalAlignment="Center" Stroke="#4E6180" Stretch="Uniform" Visibility="Hidden" Points="0,0 6,5 0,10">
                <Polygon.Fill>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                        <GradientStop Color="#BBEBFD" Offset=".2"/>
                        <GradientStop Color="#288CFF" Offset="1"/>
                    </LinearGradientBrush>
                </Polygon.Fill>
            </Polygon>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type toolkit:DataGridRow}},Path=IsSelected}" Value="True">
                <Setter TargetName="_indicator" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="CenterAlignedColumnHeaderStyle" TargetType="{x:Type toolkit:DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="CenterAlignedCellStyle" TargetType="{x:Type toolkit:DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toolkit:DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
	                                      VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type toolkit:DataGrid}" TargetType="{x:Type toolkit:DataGrid}">
        <Setter Property="Background" Value="{StaticResource DefaultControlBackgroundBrush}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GridLineColorBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource GridLineColorBrush}" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource AlternateRowBackgroundBrush}" />
        <Setter Property="RowHeaderTemplate" Value="{StaticResource rowHeaderTemplate}"/>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="toolkit:DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="Red"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toolkit:DataGrid}">
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True"
						Padding="{TemplateBinding Padding}">
                        <ScrollViewer Focusable="false" Name="DG_ScrollViewer">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!--Left Column Header Corner -->
                                        <Button 
											Command="{x:Static toolkit:DataGrid.SelectAllCommand}"
											Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type toolkit:DataGrid}}, Path=CellsPanelHorizontalOffset}"
											Focusable="false"
											Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type toolkit:DataGrid}}, Path=HeadersVisibility, Converter={x:Static toolkit:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static toolkit:DataGridHeadersVisibility.All}}" 
											Template="{StaticResource SelectAllButtonTemplate}"/>
                                        <!--Column Headers-->
                                        <Primitives:DataGridColumnHeadersPresenter 
											Grid.Column="1"
											Name="PART_ColumnHeadersPresenter"
											Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type toolkit:DataGrid}}, Path=HeadersVisibility, Converter={x:Static toolkit:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static toolkit:DataGridHeadersVisibility.Column}}"/>
                                        <!--DataGrid content-->
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar
											Grid.Row="1" Grid.Column="2" Name="PART_VerticalScrollBar"
											Orientation="Vertical"
											Maximum="{TemplateBinding ScrollableHeight}"
											ViewportSize="{TemplateBinding ViewportHeight}"
											Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
											Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type toolkit:DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar 
												Grid.Column="1"
												Name="PART_HorizontalScrollBar"
												Orientation="Horizontal"
												Maximum="{TemplateBinding ScrollableWidth}"
												ViewportSize="{TemplateBinding ViewportWidth}"
												Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
												Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="5,2,2,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <!--TextBox style-->
    <ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <AdornedElementPlaceholder HorizontalAlignment="Left"/>
            <TextBlock Margin="5,0,5,0" Foreground="Red" Padding="5" FontWeight="Bold" FontSize="16" VerticalAlignment="Center" Text="*" />
        </DockPanel>
    </ControlTemplate>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource validationTemplate}" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="5,2,2,2"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type toolkit:DatePicker}">
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource validationTemplate}" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="5,2,2,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--ToolBar Style-->
  <LinearGradientBrush EndPoint="0.5,-0.175" x:Key="Brush_ToolBarOverflowRegion" StartPoint="0.5,1.175">
    <GradientStop Color="#FFE7E7E7" Offset="0.445" />
    <GradientStop Color="#FFF9F9F9" Offset="0.83" />
    <GradientStop Color="#FFE7E7E7" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Brush_ToolBarButtonBorder">#FFFB8C3C</SolidColorBrush>
  <LinearGradientBrush EndPoint="0,1" x:Key="Brush_ToolBarBackground" StartPoint="0,0">
    <GradientStop Color="#FFC8C8C8" Offset="0" />
    <GradientStop Color="#FFEFEFEF" Offset="0.105" />
    <GradientStop Color="#FFC8C8C8" Offset="0.52" />
  </LinearGradientBrush>
  <LinearGradientBrush EndPoint="0,1" x:Key="Brush_ToolBarMouseOverBackground" SpreadMethod="Reflect" StartPoint="0,0">
    <GradientStop Color="#FFFFF5CB" Offset="0.2" />
    <GradientStop Color="#FFFFE290" Offset="0.6" />
    <GradientStop Color="#FFFFDB76" Offset="1" />
    <GradientStop Color="#FFFFF8D5" Offset="0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Brush_ToolBarMouseOverForeground">Black</SolidColorBrush>
  <LinearGradientBrush EndPoint="0,1" x:Key="Brush_ToolBarButtonPressed" StartPoint="0,0">
    <GradientStop Color="#FFFB923C" Offset="0" />
    <GradientStop Color="#FFFC953C" Offset="0.0967741935483871" />
    <GradientStop Color="#FFFD9D3D" Offset="0.303" />
    <GradientStop Color="#FFFFAB3F" Offset="0.551" />
    <GradientStop Color="#FFFFB14D" Offset="0.788" />
    <GradientStop Color="#FFFFB85D" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush EndPoint="0,1" x:Key="Brush_ToolBarHorizontalBackground" StartPoint="0,0">
    <GradientStop Color="White" Offset="0" />
    <GradientStop Color="#FFFFFBFF" Offset="0.5" />
    <GradientStop Color="#FFF7F7F7" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush EndPoint="0,1" x:Key="Brush_ToolBarToggleButtonHorizontalBackground" StartPoint="0,0">
    <GradientStop Color="#FFECECEC" Offset="0" />
    <GradientStop Color="#FFDDDDDD" Offset="0.5" />
    <GradientStop Color="#FFA0A0A0" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Brush_ToolBarGripper">#FFC6C3C6</SolidColorBrush>
  <SolidColorBrush x:Key="Brush_ToolBarSubMenuBackground">#FFFDFDFD</SolidColorBrush>
  <SolidColorBrush x:Key="Brush_ToolBarMenuBorder">Gray</SolidColorBrush>
  <LinearGradientBrush EndPoint="1,0" x:Key="Brush_ToolBarToggleButtonVerticalBackground" StartPoint="0,0">
    <GradientStop Color="#FFECECEC" Offset="0" />
    <GradientStop Color="#FFDDDDDD" Offset="0.5" />
    <GradientStop Color="#FFA0A0A0" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush EndPoint="1,0" x:Key="Brush_ToolBarVerticalBackground" StartPoint="0,0">
    <GradientStop Color="White" Offset="0" />
    <GradientStop Color="#FFFFFBFF" Offset="0.5" />
    <GradientStop Color="#FFF7F7F7" Offset="1" />
  </LinearGradientBrush>
  <Style TargetType="{x:Type ToolBarTray}">
    <Setter Property="Panel.Background" Value="{DynamicResource Brush_ToolBarBackground}" />
    <Setter Property="DockPanel.Dock" Value="Top" />
  </Style>
  <Style TargetType="{x:Type cControl:CustomToolBarButton}">
    <Setter Property="cControl:CustomToolBarButton.ButtonPressedBackground" Value="{DynamicResource Brush_ToolBarButtonPressed}" />
    <Setter Property="cControl:CustomToolBarButton.ButtonPressedBorder" Value="{DynamicResource Brush_ToolBarButtonBorder}" />
    <Setter Property="cControl:CustomToolBarButton.MouseOverBackground" Value="{DynamicResource Brush_ToolBarMouseOverBackground}" />
    <Setter Property="cControl:CustomToolBarButton.MouseOverBorder" Value="{DynamicResource Brush_ToolBarButtonBorder}" />
    <Setter Property="cControl:CustomToolBarButton.MouseOverForeground" Value="{DynamicResource Brush_ToolBarMouseOverForeground}" />
  </Style>
  <Style TargetType="{x:Type ToolBar}">
    <Setter Property="DockPanel.Dock" Value="Top" />
    <Setter Property="Panel.Background" Value="{x:Null}" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Top" />
    <Setter Property="Border.BorderBrush" Value="{x:Null}" />
    <Setter Property="Border.BorderThickness" Value="0" />
    <Setter Property="TextElement.Foreground" Value="{DynamicResource Brush_TextForeground}" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid Margin="3,1,1,1" Name="Grid" SnapsToDevicePixels="True">
            <Grid HorizontalAlignment="Right" Name="OverflowGrid">
              <ToggleButton Background="{DynamicResource Brush_ToolBarOverflowRegion}" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}" Name="OverflowButton">
                <ToggleButton.Style>
                  <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Panel.Background">
                      <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                          <GradientStop Color="#FFECECEC" Offset="0" />
                          <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                          <GradientStop Color="#FFA0A0A0" Offset="1" />
                        </LinearGradientBrush>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="FrameworkElement.MinHeight" Value="0" />
                    <Setter Property="FrameworkElement.MinWidth" Value="0" />
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                          <Border Background="{TemplateBinding Panel.Background}" CornerRadius="0,3,3,0" Name="Bd" SnapsToDevicePixels="True">
                            <Canvas Height="7" HorizontalAlignment="Right" Margin="7,2,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="6">
                              <Path Data="M1,1.5L6,1.5" Stroke="White" />
                              <Path Data="M0,0.5L5,0.5" Stroke="{TemplateBinding TextElement.Foreground}" />
                              <Path Data="M0.5,4L6.5,4 3.5,7z" Fill="White" />
                              <Path Data="M-0.5,3L5.5,3 2.5,6z" Fill="{TemplateBinding TextElement.Foreground}" />
                            </Canvas>
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Brush_ToolBarMouseOverBackground}" />
                            </Trigger>
                            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Brush_ToolBarMouseOverBackground}" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                              <Setter Property="TextElement.Foreground" Value="#FFC6C3C6" />
                            </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </ToggleButton.Style>
              </ToggleButton>
              <Popup AllowsTransparency="True" Focusable="False" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Name="OverflowPopup" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="False">
                <Microsoft_Windows_Themes:SystemDropShadowChrome Color="Transparent" Name="Shdw">
                  <Border Background="#FFFDFDFD" BorderBrush="Gray" BorderThickness="1">
                    <ToolBarOverflowPanel FocusVisualStyle="{x:Null}" Focusable="True" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" Margin="2" Name="PART_ToolBarOverflowPanel" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" WrapWidth="200" />
                  </Border>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
              </Popup>
            </Grid>
            <Border Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3,3,3,3" Margin="0,0,11,0" Name="MainPanelBorder" Padding="{TemplateBinding Control.Padding}">
              <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <Thumb Margin="-3,-1,0,0" Name="ToolBarThumb" Padding="6,5,1,6" Width="10">
                  <Thumb.Style>
                    <Style TargetType="{x:Type Thumb}">
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
                              <Rectangle>
                                <Rectangle.Fill>
                                  <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                      <DrawingGroup>
                                        <GeometryDrawing Brush="White" Geometry="M1,1L1,3 3,3 3,1z" />
                                        <GeometryDrawing Brush="#FFC6C3C6" Geometry="M0,0L0,2 2,2 2,0z" />
                                      </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                  </DrawingBrush>
                                </Rectangle.Fill>
                              </Rectangle>
                            </Border>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Thumb.Style>
                </Thumb>
                <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" HorizontalAlignment="Center" Margin="4,0" Name="ToolBarHeader" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
                <ToolBarPanel IsItemsHost="True" Margin="0,1,2,2" Name="PART_ToolBarPanel" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolBar.IsOverflowOpen" Value="True">
              <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="False" />
            </Trigger>
            <Trigger Property="HeaderedContentControl.Header" Value="{x:Null}">
              <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="True">
              <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="True">
              <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
              <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="True" />
              <Setter Property="Color" TargetName="Shdw" Value="#71000000" />
            </Trigger>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
              <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
              <Setter Property="Style" TargetName="OverflowButton">
                <Setter.Value>
                  <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Panel.Background">
                      <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                          <GradientStop Color="#FFECECEC" Offset="0" />
                          <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                          <GradientStop Color="#FFA0A0A0" Offset="1" />
                        </LinearGradientBrush>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="FrameworkElement.MinHeight" Value="0" />
                    <Setter Property="FrameworkElement.MinWidth" Value="0" />
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                          <Border Background="{TemplateBinding Panel.Background}" CornerRadius="0,0,3,3" Name="Bd" SnapsToDevicePixels="True">
                            <Canvas Height="6" HorizontalAlignment="Right" Margin="2,7,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="7">
                              <Path Data="M1.5,1L1.5,6" Stroke="White" />
                              <Path Data="M0.5,0L0.5,5" Stroke="{TemplateBinding TextElement.Foreground}" />
                              <Path Data="M3.5,0.5L7,3.5 4,6.5z" Fill="White" />
                              <Path Data="M3,-0.5L6,2.5 3,5.5z" Fill="{TemplateBinding TextElement.Foreground}" />
                            </Canvas>
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                              <Setter Property="Background" TargetName="Bd" Value="#FFC2E0FF" />
                            </Trigger>
                            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                              <Setter Property="Background" TargetName="Bd" Value="#FFC2E0FF" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                              <Setter Property="TextElement.Foreground" Value="#FFC6C3C6" />
                            </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </Setter.Value>
              </Setter>
              <Setter Property="Height" TargetName="ToolBarThumb" Value="10" />
              <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto" />
              <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0" />
              <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1" />
              <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
              <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
              <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top" />
              <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
              <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch" />
              <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom" />
              <Setter Property="Placement" TargetName="OverflowPopup" Value="Right" />
              <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11" />
              <Setter Property="Panel.Background">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                    <GradientStop Color="White" Offset="0" />
                    <GradientStop Color="#FFFFFBFF" Offset="0.5" />
                    <GradientStop Color="#FFF7F7F7" Offset="1" />
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <SolidColorBrush x:Key="controlBorderBrush" Color="#3C7FB1"/>
    <SolidColorBrush x:Key="controlBorderNormalBrush" Color="#707070"/>

    <LinearGradientBrush x:Key="messageBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFFFD7" Offset="0.0"/>
        <GradientStop Color="#FFFFB2" Offset="1.0"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="messageBorder" Color="#DCDC41"></SolidColorBrush>

    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>

    <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#DCEBFC" Offset="0" />
        <GradientStop Color="#C1DBFC" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#C4CCD9" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="stripesBrush" EndPoint="140.6,74.4" StartPoint="138.4,72.8" MappingMode="Absolute" SpreadMethod="Repeat">
        <GradientStop Color="#00000000" Offset="0"/>
        <GradientStop Color="#FF98D8FF" Offset="0.073"/>
        <GradientStop Color="#00000000" Offset="0.156"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="FocusBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#E5C365" Offset="0.0"/>
        <GradientStop Color="#E5C365" Offset="1.0"/>
    </LinearGradientBrush>

    <Style x:Key="cellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Focusable" Value="false"/>
    </Style>

    <Style TargetType="toolkit:DataGridCell">
        <Setter Property="Focusable" Value="false"/>
    </Style>

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/PresentationFramework.Aero;component/themes/aero.normalcolor.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    

</ResourceDictionary>